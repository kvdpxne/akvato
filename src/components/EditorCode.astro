---
import {getHighlighter} from "shikiji";
import * as fs from "fs";

const language = JSON.parse(fs.readFileSync("public/_themes/javascript.json", "utf-8"));
const theme = JSON.parse(fs.readFileSync("public/_themes/dark.json", "utf-8"));
const theme2 = JSON.parse(fs.readFileSync("public/_themes/light.json", "utf-8"));

const highlighter = await getHighlighter();

await highlighter.loadLanguage(language);
await highlighter.loadTheme(theme, theme2);

const code = `package me.kvdpxne.application;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

/**
 * Main entry point for the Application.
 * It initializes and runs the Spring Boot application.
 */
@SpringBootApplication
public class Application {

  /**
   * Main method to start the Application.
   *
   * @param arguments Command-line arguments passed to the application.
   */
  public static void main(final String[] arguments) {
    // Run the Spring Boot application by invoking SpringApplication.run()
    // with the Application class and command-line arguments.
    SpringApplication.run(Application.class, arguments);
  }
}`;
const html = highlighter.codeToHtml(code, {
  lang: "java",
  themes: {
    dark: "dark",
    light: "light"
  }
});
---

<style is:global>
  /* noinspection CssUnresolvedCustomProperty */
  @media (prefers-color-scheme: dark) {
    .shiki, .shiki span {
      background-color: var(--shiki-dark-bg) !important;
      color: var(--shiki-dark) !important;
    }
  }
</style>

<style>
  .container {
    @apply bg-white;
    @apply dark:bg-neutral-800;
    @apply h-96;
    @apply overflow-y-auto;
    @apply ps-3;
    @apply pe-1;
    @apply pt-3;
    @apply pb-1;
  }
</style>

<div class="container">
  <Fragment set:html={html}/>
</div>


